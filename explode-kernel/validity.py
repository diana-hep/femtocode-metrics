from nested import runme

def testy(xdata, xsize, ydata, ysize):
    outdata = [None] * 100
    outsize = [None] * 100
    runme(xdata, xsize, ydata, ysize, 2, outdata, outsize)
    outdata[outdata.index(None):] = []
    outsize[outsize.index(None):] = []
    return outdata, outsize

assert testy([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [3, 2, 2, 2, 3, 2, 2, 2],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [101, 201, 102, 202, 103, 203, 104, 204, 301, 401, 302, 402, 303, 403, 304, 404, 501, 601, 502, 602, 503, 603, 504, 604,
     705, 805, 706, 806, 707, 807, 708, 808, 905, 1005, 906, 1006, 907, 1007, 908, 1008, 1105, 1205, 1106, 1206, 1107, 1207, 1108, 1208], \
    [3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2])

assert testy([7, 8, 9, 10, 11, 12], [3, 0, 0, 0, 3, 2, 2, 2],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [705, 805, 706, 806, 707, 807, 708, 808, 905, 1005, 906, 1006, 907, 1007, 908, 1008, 1105, 1205, 1106, 1206, 1107, 1207, 1108, 1208], \
    [3, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2])

assert testy([7, 8, 9, 10, 11, 12], [0, 3, 2, 2, 2],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [705, 805, 706, 806, 707, 807, 708, 808, 905, 1005, 906, 1006, 907, 1007, 908, 1008, 1105, 1205, 1106, 1206, 1107, 1207, 1108, 1208], \
    [0, 3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2])

assert testy([1, 2, 3, 4, 5, 6], [3, 2, 2, 2, 3, 0, 0, 0],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [101, 201, 102, 202, 103, 203, 104, 204, 301, 401, 302, 402, 303, 403, 304, 404, 501, 601, 502, 602, 503, 603, 504, 604], \
    [3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 3, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0])

assert testy([1, 2, 3, 4, 5, 6], [3, 2, 2, 2, 0],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [101, 201, 102, 202, 103, 203, 104, 204, 301, 401, 302, 402, 303, 403, 304, 404, 501, 601, 502, 602, 503, 603, 504, 604], \
    [3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 0])

assert testy([], [3, 0, 0, 0, 3, 0, 0, 0],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [], \
    [3, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 3, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0])

assert testy([], [0, 3, 0, 0, 0],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [], \
    [0, 3, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0])

assert testy([], [0, 0],
             [1, 2, 3, 4, 5, 6, 7, 8], [4, 4]) == (
    [], \
    [0, 0])

assert testy([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [3, 2, 2, 2, 3, 2, 2, 2],
             [5, 6, 7, 8], [0, 4]) == (
    [705, 805, 706, 806, 707, 807, 708, 808, 905, 1005, 906, 1006, 907, 1007, 908, 1008, 1105, 1205, 1106, 1206, 1107, 1207, 1108, 1208], \
    [3, 0, 0, 0, 3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2])

assert testy([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [3, 2, 2, 2, 3, 2, 2, 2],
             [1, 2, 3, 4], [4, 0]) == (
    [101, 201, 102, 202, 103, 203, 104, 204, 301, 401, 302, 402, 303, 403, 304, 404, 501, 601, 502, 602, 503, 603, 504, 604], \
    [3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 3, 0, 0, 0])

assert testy([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [3, 2, 2, 2, 3, 2, 2, 2],
             [], [0, 0]) == (
    [], \
    [3, 0, 0, 0, 3, 0, 0, 0])

assert testy([7, 8, 9, 10, 11, 12], [3, 0, 0, 0, 3, 2, 2, 2],
             [5, 6, 7, 8], [0, 4]) == (
    [705, 805, 706, 806, 707, 807, 708, 808, 905, 1005, 906, 1006, 907, 1007, 908, 1008, 1105, 1205, 1106, 1206, 1107, 1207, 1108, 1208], \
    [3, 0, 0, 0, 3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2])

assert testy([7, 8, 9, 10, 11, 12], [0, 3, 2, 2, 2],
             [5, 6, 7, 8], [0, 4]) == (
    [705, 805, 706, 806, 707, 807, 708, 808, 905, 1005, 906, 1006, 907, 1007, 908, 1008, 1105, 1205, 1106, 1206, 1107, 1207, 1108, 1208], \
    [0, 3, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2])

assert testy([], [0, 3, 0, 0, 0],
             [5, 6, 7, 8], [0, 4]) == (
    [], \
    [0, 3, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0])

assert testy([], [0, 0],
             [5, 6, 7, 8], [0, 4]) == (
    [], \
    [0, 0])
